{"version":3,"sources":["toastr.js"],"names":["define","$","error","message","title","optionsOverride","notify","type","toastType","iconClass","getOptions","iconClasses","getContainer","options","create","$container","containerId","length","createContainer","info","subscribe","callback","listener","success","warning","clear","$toastElement","clearOptions","clearToast","clearContainer","remove","removeToast","children","toastsToClear","i","force","hideMethod","duration","hideDuration","easing","hideEasing","complete","attr","addClass","positionClass","appendTo","target","getDefaults","tapToDismiss","toastClass","debug","showMethod","showDuration","showEasing","onShown","undefined","onHidden","closeMethod","closeDuration","closeEasing","closeOnHover","extendedTimeOut","timeOut","titleClass","messageClass","escapeHtml","closeHtml","closeClass","newestOnTop","preventDuplicates","progressBar","progressClass","rtl","publish","args","map","source","replace","personalizeToast","setIcon","setTitle","setMessage","setCloseButton","setProgressBar","setRTL","setSequence","setAria","ariaValue","handleEvents","hover","stickAround","delayedHideToast","onclick","click","hideToast","closeButton","$closeElement","event","stopPropagation","cancelBubble","onCloseClick","displayToast","hide","intervalId","setTimeout","maxHideTime","parseFloat","hideEta","Date","getTime","setInterval","updateProgress","prepend","append","suffix","$titleElement","$messageElement","$progressElement","shouldExit","previousToast","override","method","clearTimeout","response","state","endTime","stop","percentage","width","extend","toastId","startTime","console","log","toastr","is","version"],"mappings":"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","file":"toastr.js","sourcesContent":["/*\r\n* Toastr\r\n* Copyright 2012-2015\r\n* Authors: John Papa, Hans Fj√§llemark, and Tim Ferrell.\r\n* All Rights Reserved.\r\n* Use, reproduction, distribution, and modification of this code is subject to the terms and\r\n* conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php\r\n*\r\n* ARIA Support: Greta Krafsig\r\n*\r\n* Project: https://github.com/CodeSeven/toastr\r\n*/\r\n/* global define */\r\n\r\ndefine(['jquery'], function($){\r\n    \r\n    var $container;\r\n    var listener;\r\n    var toastId = 0;\r\n    var toastType = {\r\n        error: 'error',\r\n        info: 'info',\r\n        success: 'success',\r\n        warning: 'warning'\r\n    };\r\n\r\n    var toastr = {\r\n        clear: clear,\r\n        remove: remove,\r\n        error: error,\r\n        getContainer: getContainer,\r\n        info: info,\r\n        options: {},\r\n        subscribe: subscribe,\r\n        success: success,\r\n        version: '2.1.4',\r\n        warning: warning\r\n    };\r\n\r\n    var previousToast;\r\n\r\n    return toastr;\r\n\r\n    ////////////////\r\n\r\n    function error(message, title, optionsOverride) {\r\n        return notify({\r\n            type: toastType.error,\r\n            iconClass: getOptions().iconClasses.error,\r\n            message: message,\r\n            optionsOverride: optionsOverride,\r\n            title: title\r\n        });\r\n    }\r\n\r\n    function getContainer(options, create) {\r\n        if (!options) { options = getOptions(); }\r\n        $container = $('#' + options.containerId);\r\n        if ($container.length) {\r\n            return $container;\r\n        }\r\n        if (create) {\r\n            $container = createContainer(options);\r\n        }\r\n        return $container;\r\n    }\r\n\r\n    function info(message, title, optionsOverride) {\r\n        return notify({\r\n            type: toastType.info,\r\n            iconClass: getOptions().iconClasses.info,\r\n            message: message,\r\n            optionsOverride: optionsOverride,\r\n            title: title\r\n        });\r\n    }\r\n\r\n    function subscribe(callback) {\r\n        listener = callback;\r\n    }\r\n\r\n    function success(message, title, optionsOverride) {\r\n        return notify({\r\n            type: toastType.success,\r\n            iconClass: getOptions().iconClasses.success,\r\n            message: message,\r\n            optionsOverride: optionsOverride,\r\n            title: title\r\n        });\r\n    }\r\n\r\n    function warning(message, title, optionsOverride) {\r\n        return notify({\r\n            type: toastType.warning,\r\n            iconClass: getOptions().iconClasses.warning,\r\n            message: message,\r\n            optionsOverride: optionsOverride,\r\n            title: title\r\n        });\r\n    }\r\n\r\n    function clear($toastElement, clearOptions) {\r\n        var options = getOptions();\r\n        if (!$container) { getContainer(options); }\r\n        if (!clearToast($toastElement, options, clearOptions)) {\r\n            clearContainer(options);\r\n        }\r\n    }\r\n\r\n    function remove($toastElement) {\r\n        var options = getOptions();\r\n        if (!$container) { getContainer(options); }\r\n        if ($toastElement && $(':focus', $toastElement).length === 0) {\r\n            removeToast($toastElement);\r\n            return;\r\n        }\r\n        if ($container.children().length) {\r\n            $container.remove();\r\n        }\r\n    }\r\n\r\n    // internal functions\r\n\r\n    function clearContainer (options) {\r\n        var toastsToClear = $container.children();\r\n        for (var i = toastsToClear.length - 1; i >= 0; i--) {\r\n            clearToast($(toastsToClear[i]), options);\r\n        }\r\n    }\r\n\r\n    function clearToast ($toastElement, options, clearOptions) {\r\n        var force = clearOptions && clearOptions.force ? clearOptions.force : false;\r\n        if ($toastElement && (force || $(':focus', $toastElement).length === 0)) {\r\n            $toastElement[options.hideMethod]({\r\n                duration: options.hideDuration,\r\n                easing: options.hideEasing,\r\n                complete: function () { removeToast($toastElement); }\r\n            });\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function createContainer(options) {\r\n        $container = $('<div/>')\r\n            .attr('id', options.containerId)\r\n            .addClass(options.positionClass);\r\n\r\n        $container.appendTo($(options.target));\r\n        return $container;\r\n    }\r\n\r\n    function getDefaults() {\r\n        return {\r\n            tapToDismiss: true,\r\n            toastClass: 'toast',\r\n            containerId: 'toast-container',\r\n            debug: false,\r\n\r\n            showMethod: 'fadeIn', //fadeIn, slideDown, and show are built into jQuery\r\n            showDuration: 300,\r\n            showEasing: 'swing', //swing and linear are built into jQuery\r\n            onShown: undefined,\r\n            hideMethod: 'fadeOut',\r\n            hideDuration: 1000,\r\n            hideEasing: 'swing',\r\n            onHidden: undefined,\r\n            closeMethod: false,\r\n            closeDuration: false,\r\n            closeEasing: false,\r\n            closeOnHover: true,\r\n\r\n            extendedTimeOut: 1000,\r\n            iconClasses: {\r\n                error: 'toast-error',\r\n                info: 'toast-info',\r\n                success: 'toast-success',\r\n                warning: 'toast-warning'\r\n            },\r\n            iconClass: 'toast-info',\r\n            positionClass: 'toast-top-right',\r\n            timeOut: 5000, // Set timeOut and extendedTimeOut to 0 to make it sticky\r\n            titleClass: 'toast-title',\r\n            messageClass: 'toast-message',\r\n            escapeHtml: false,\r\n            target: 'body',\r\n            closeHtml: '<button type=\"button\">&times;</button>',\r\n            closeClass: 'toast-close-button',\r\n            newestOnTop: true,\r\n            preventDuplicates: false,\r\n            progressBar: false,\r\n            progressClass: 'toast-progress',\r\n            rtl: false\r\n        };\r\n    }\r\n\r\n    function publish(args) {\r\n        if (!listener) { return; }\r\n        listener(args);\r\n    }\r\n\r\n    function notify(map) {\r\n        var options = getOptions();\r\n        var iconClass = map.iconClass || options.iconClass;\r\n\r\n        if (typeof (map.optionsOverride) !== 'undefined') {\r\n            options = $.extend(options, map.optionsOverride);\r\n            iconClass = map.optionsOverride.iconClass || iconClass;\r\n        }\r\n\r\n        if (shouldExit(options, map)) { return; }\r\n\r\n        toastId++;\r\n\r\n        $container = getContainer(options, true);\r\n\r\n        var intervalId = null;\r\n        var $toastElement = $('<div/>');\r\n        var $titleElement = $('<div/>');\r\n        var $messageElement = $('<div/>');\r\n        var $progressElement = $('<div/>');\r\n        var $closeElement = $(options.closeHtml);\r\n        var progressBar = {\r\n            intervalId: null,\r\n            hideEta: null,\r\n            maxHideTime: null\r\n        };\r\n        var response = {\r\n            toastId: toastId,\r\n            state: 'visible',\r\n            startTime: new Date(),\r\n            options: options,\r\n            map: map\r\n        };\r\n\r\n        personalizeToast();\r\n\r\n        displayToast();\r\n\r\n        handleEvents();\r\n\r\n        publish(response);\r\n\r\n        if (options.debug && console) {\r\n            console.log(response);\r\n        }\r\n\r\n        return $toastElement;\r\n\r\n        function escapeHtml(source) {\r\n            if (source == null) {\r\n                source = '';\r\n            }\r\n\r\n            return source\r\n                .replace(/&/g, '&amp;')\r\n                .replace(/\"/g, '&quot;')\r\n                .replace(/'/g, '&#39;')\r\n                .replace(/</g, '&lt;')\r\n                .replace(/>/g, '&gt;');\r\n        }\r\n\r\n        function personalizeToast() {\r\n            setIcon();\r\n            setTitle();\r\n            setMessage();\r\n            setCloseButton();\r\n            setProgressBar();\r\n            setRTL();\r\n            setSequence();\r\n            setAria();\r\n        }\r\n\r\n        function setAria() {\r\n            var ariaValue = '';\r\n            switch (map.iconClass) {\r\n                case 'toast-success':\r\n                case 'toast-info':\r\n                    ariaValue =  'polite';\r\n                    break;\r\n                default:\r\n                    ariaValue = 'assertive';\r\n            }\r\n            $toastElement.attr('aria-live', ariaValue);\r\n        }\r\n\r\n        function handleEvents() {\r\n            if (options.closeOnHover) {\r\n                $toastElement.hover(stickAround, delayedHideToast);\r\n            }\r\n\r\n            if (!options.onclick && options.tapToDismiss) {\r\n                $toastElement.click(hideToast);\r\n            }\r\n\r\n            if (options.closeButton && $closeElement) {\r\n                $closeElement.click(function (event) {\r\n                    if (event.stopPropagation) {\r\n                        event.stopPropagation();\r\n                    } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {\r\n                        event.cancelBubble = true;\r\n                    }\r\n\r\n                    if (options.onCloseClick) {\r\n                        options.onCloseClick(event);\r\n                    }\r\n\r\n                    hideToast(true);\r\n                });\r\n            }\r\n\r\n            if (options.onclick) {\r\n                $toastElement.click(function (event) {\r\n                    options.onclick(event);\r\n                    hideToast();\r\n                });\r\n            }\r\n        }\r\n\r\n        function displayToast() {\r\n            $toastElement.hide();\r\n\r\n            $toastElement[options.showMethod](\r\n                {duration: options.showDuration, easing: options.showEasing, complete: options.onShown}\r\n            );\r\n\r\n            if (options.timeOut > 0) {\r\n                intervalId = setTimeout(hideToast, options.timeOut);\r\n                progressBar.maxHideTime = parseFloat(options.timeOut);\r\n                progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\r\n                if (options.progressBar) {\r\n                    progressBar.intervalId = setInterval(updateProgress, 10);\r\n                }\r\n            }\r\n        }\r\n\r\n        function setIcon() {\r\n            if (map.iconClass) {\r\n                $toastElement.addClass(options.toastClass).addClass(iconClass);\r\n            }\r\n        }\r\n\r\n        function setSequence() {\r\n            if (options.newestOnTop) {\r\n                $container.prepend($toastElement);\r\n            } else {\r\n                $container.append($toastElement);\r\n            }\r\n        }\r\n\r\n        function setTitle() {\r\n            if (map.title) {\r\n                var suffix = map.title;\r\n                if (options.escapeHtml) {\r\n                    suffix = escapeHtml(map.title);\r\n                }\r\n                $titleElement.append(suffix).addClass(options.titleClass);\r\n                $toastElement.append($titleElement);\r\n            }\r\n        }\r\n\r\n        function setMessage() {\r\n            if (map.message) {\r\n                var suffix = map.message;\r\n                if (options.escapeHtml) {\r\n                    suffix = escapeHtml(map.message);\r\n                }\r\n                $messageElement.append(suffix).addClass(options.messageClass);\r\n                $toastElement.append($messageElement);\r\n            }\r\n        }\r\n\r\n        function setCloseButton() {\r\n            if (options.closeButton) {\r\n                $closeElement.addClass(options.closeClass).attr('role', 'button');\r\n                $toastElement.prepend($closeElement);\r\n            }\r\n        }\r\n\r\n        function setProgressBar() {\r\n            if (options.progressBar) {\r\n                $progressElement.addClass(options.progressClass);\r\n                $toastElement.prepend($progressElement);\r\n            }\r\n        }\r\n\r\n        function setRTL() {\r\n            if (options.rtl) {\r\n                $toastElement.addClass('rtl');\r\n            }\r\n        }\r\n\r\n        function shouldExit(options, map) {\r\n            if (options.preventDuplicates) {\r\n                if (map.message === previousToast) {\r\n                    return true;\r\n                } else {\r\n                    previousToast = map.message;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function hideToast(override) {\r\n            var method = override && options.closeMethod !== false ? options.closeMethod : options.hideMethod;\r\n            var duration = override && options.closeDuration !== false ?\r\n                options.closeDuration : options.hideDuration;\r\n            var easing = override && options.closeEasing !== false ? options.closeEasing : options.hideEasing;\r\n            if ($(':focus', $toastElement).length && !override) {\r\n                return;\r\n            }\r\n            clearTimeout(progressBar.intervalId);\r\n            return $toastElement[method]({\r\n                duration: duration,\r\n                easing: easing,\r\n                complete: function () {\r\n                    removeToast($toastElement);\r\n                    clearTimeout(intervalId);\r\n                    if (options.onHidden && response.state !== 'hidden') {\r\n                        options.onHidden();\r\n                    }\r\n                    response.state = 'hidden';\r\n                    response.endTime = new Date();\r\n                    publish(response);\r\n                }\r\n            });\r\n        }\r\n\r\n        function delayedHideToast() {\r\n            if (options.timeOut > 0 || options.extendedTimeOut > 0) {\r\n                intervalId = setTimeout(hideToast, options.extendedTimeOut);\r\n                progressBar.maxHideTime = parseFloat(options.extendedTimeOut);\r\n                progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\r\n            }\r\n        }\r\n\r\n        function stickAround() {\r\n            clearTimeout(intervalId);\r\n            progressBar.hideEta = 0;\r\n            $toastElement.stop(true, true)[options.showMethod](\r\n                {duration: options.showDuration, easing: options.showEasing}\r\n            );\r\n        }\r\n\r\n        function updateProgress() {\r\n            var percentage = ((progressBar.hideEta - (new Date().getTime())) / progressBar.maxHideTime) * 100;\r\n            $progressElement.width(percentage + '%');\r\n        }\r\n    }\r\n\r\n    function getOptions() {\r\n        return $.extend({}, getDefaults(), toastr.options);\r\n    }\r\n\r\n    function removeToast($toastElement) {\r\n        if (!$container) { $container = getContainer(); }\r\n        if ($toastElement.is(':visible')) {\r\n            return;\r\n        }\r\n        $toastElement.remove();\r\n        $toastElement = null;\r\n        if ($container.children().length === 0) {\r\n            $container.remove();\r\n            previousToast = undefined;\r\n        }\r\n    }\r\n});"]}